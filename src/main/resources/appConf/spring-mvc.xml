<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		">

	<!-- spring的默认实现,不配置也一样 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
	<!-- ②：启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->

	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 配置SpringMVC的视图解析器 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
<!-- 	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
		上传总文件之50M
		<property name="maxUploadSize" value="52428800"></property>
		<property name="maxInMemorySize" value="40960"></property>
	</bean> -->

<!-- 	<bean id="exceptionHandler"
		class="com.hc.exceptions.GlobalExceptionHandler" /> -->
		
	<!-- 使用ehcache缓存 -->    
<!-- 	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:shared="true">  
	     <property name="configLocation" value="classpath:appConf/ehcache-config.xml" />  
	</bean> -->
	
	<!-- 使用spring上下文工具类 -->
	<!-- <bean id="springContextHelper" class="com.hc.ext.core.SpringContextHelper"></bean>  -->
	
	<!-- ================ Shiro start ================ -->
<!-- 	<bean id="kickoutSessionControlFilter" class="com.hc.filter.KickoutSessionControlFilter">  
	    <property name="kickoutUrl" value="login.do"/>  
	</bean>   
		DefaultWebSecurityManager使用的默认实现，用于Web环境，其直接使用Servlet容器的会话；DefaultWebSessionManager：用于Web环境的实现，可以替代ServletContainerSessionManager，自己维护着会话，直接废弃了Servlet容器的会话管理。
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="ShiroRealm" />
		</bean>
		
		項目自定义的Realm
	    <bean id="ShiroRealm" class="com.hc.filter.ShiroRealm" ></bean> -->
		
		<!-- Shiro Filter -->
<!-- 		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />

			<property name="loginUrl" value="/" />
			
			<property name="successUrl" value="/index" />
			
			<property name="unauthorizedUrl" value="/loginIn" />
			<property name="filters">  
		         <util:map>  
		             <entry key="kickout" value-ref="kickoutSessionControlFilter"/>  
		         </util:map>  
     		</property>  
			<property name="filterChainDefinitions">
				<value>
				/assets/** 			= anon
				/commonJs/** 		= anon
				/img/** 			= anon
				/js/** 			    = anon
				/update/** 			    = anon
				/plugins/** 			= anon
				/code.do 					= anon
				/loginIn.do					= anon
				/login.do                   = anon
				/appService/**     =anon
				/attachment/**     =anon
				/signature/**     =anon
				/Aid/**     =anon
				/emergency/info/selectById.do =anon
				/emergency/symptom/selectByInfoId.do =anon
				/user/getUserInfoByToken.do =anon
				/emergency/single/index.do  =anon
				/script/emergency/info/emergencySingle.js  =anon
				
	           	/**							= kickout,authc
				</value>
			</property>
		</bean> -->
	<!-- ================ Shiro end ================ -->
</beans>